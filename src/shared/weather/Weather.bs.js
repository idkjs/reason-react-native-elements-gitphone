// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Text$BsReactNative = require("bs-react-native/src/components/text.js");
var View$BsReactNative = require("bs-react-native/src/components/view.js");
var Style$BsReactNative = require("bs-react-native/src/style.js");
var WeatherData$Gitphone = require("./WeatherData.bs.js");
var StyleSheet$BsReactNative = require("bs-react-native/src/styleSheet.js");

var styles = StyleSheet$BsReactNative.create({
      containerStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.alignItems(/* Center */2),
            /* :: */[
              Style$BsReactNative.height(/* Pt */Block.__(0, [50])),
              /* :: */[
                Style$BsReactNative.justifyContent(/* Center */2),
                /* :: */[
                  Style$BsReactNative.paddingHorizontal(/* Pt */Block.__(0, [0])),
                  /* :: */[
                    Style$BsReactNative.paddingTop(/* Pt */Block.__(0, [0])),
                    /* :: */[
                      Style$BsReactNative.width(/* Pct */Block.__(1, [100])),
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]
          ]),
      centerContainerStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.paddingRight(/* Pt */Block.__(0, [20])),
            /* [] */0
          ]),
      buttonStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.alignItems(/* Center */2),
            /* :: */[
              Style$BsReactNative.height(/* Pt */Block.__(0, [48])),
              /* :: */[
                Style$BsReactNative.justifyContent(/* Center */2),
                /* :: */[
                  Style$BsReactNative.paddingRight(/* Pt */Block.__(0, [5])),
                  /* :: */[
                    Style$BsReactNative.width(/* Pt */Block.__(0, [40])),
                    /* [] */0
                  ]
                ]
              ]
            ]
          ]),
      textStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.color(/* String */Block.__(0, ["#fff"])),
            /* [] */0
          ])
    });

var S = /* module */[/* styles */styles];

var component = ReasonReact.reducerComponent("App");

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              WeatherData$Gitphone.getWeather(/* () */0).then((function (weather) {
                        Curry._1(self[/* send */3], /* LoadedWeather */[weather]);
                        return Promise.resolve(/* () */0);
                      })).catch((function (_err) {
                      Curry._1(self[/* send */3], /* WeatherError */0);
                      return Promise.resolve(/* () */0);
                    }));
              return /* () */0;
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* weather */0];
              var tmp;
              if (typeof match === "number") {
                tmp = match !== 0 ? "Error loading weather." : "Loading weather...";
              } else {
                var match$1 = match[0];
                tmp = ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[match$1[/* summary */0] + (" - " + Pervasives.string_of_float(match$1[/* temp */1]))]));
              }
              return ReasonReact.element(undefined, undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Caml_option.some(styles.containerStyle), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[tmp]))]));
            }),
          /* initialState */(function (param) {
              return /* record */[/* weather : None */0];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _prevState) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[/* weather : Some */[action[0]]]]);
              } else {
                return /* Update */Block.__(0, [/* record */[/* weather : Error */1]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.S = S;
exports.component = component;
exports.make = make;
/* styles Not a pure module */
