// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var CommitData$Gitphone = require("../data/CommitData.bs.js");
var RNListItem$Gitphone = require("./RNListItem.bs.js");
var Style$BsReactNative = require("bs-react-native/src/style.js");
var FlatList$BsReactNative = require("bs-react-native/src/components/flatList.js");
var ScrollView$BsReactNative = require("bs-react-native/src/components/scrollView.js");
var StyleSheet$BsReactNative = require("bs-react-native/src/styleSheet.js");

var styles = StyleSheet$BsReactNative.create({
      containerStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.alignItems(/* Center */2),
            /* :: */[
              Style$BsReactNative.height(/* Pt */Block.__(0, [50])),
              /* :: */[
                Style$BsReactNative.justifyContent(/* Center */2),
                /* :: */[
                  Style$BsReactNative.paddingHorizontal(/* Pt */Block.__(0, [0])),
                  /* :: */[
                    Style$BsReactNative.paddingTop(/* Pt */Block.__(0, [0])),
                    /* :: */[
                      Style$BsReactNative.width(/* Pct */Block.__(1, [100])),
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]
          ]),
      centerContainerStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.paddingRight(/* Pt */Block.__(0, [20])),
            /* [] */0
          ]),
      buttonStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.alignItems(/* Center */2),
            /* :: */[
              Style$BsReactNative.height(/* Pt */Block.__(0, [48])),
              /* :: */[
                Style$BsReactNative.justifyContent(/* Center */2),
                /* :: */[
                  Style$BsReactNative.paddingRight(/* Pt */Block.__(0, [5])),
                  /* :: */[
                    Style$BsReactNative.width(/* Pt */Block.__(0, [40])),
                    /* [] */0
                  ]
                ]
              ]
            ]
          ]),
      textStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.color(/* String */Block.__(0, ["#fff"])),
            /* [] */0
          ])
    });

var S = /* module */[/* styles */styles];

var listJst_000 = {
  name: "Amy Farha",
  avatar_url: "https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg",
  subtitle: "Vice President"
};

var listJst_001 = /* :: */[
  {
    name: "Chris Jackson",
    avatar_url: "https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg",
    subtitle: "Vice Chairman"
  },
  /* [] */0
];

var listJst = /* :: */[
  listJst_000,
  listJst_001
];

var component = ReasonReact.statelessComponent("CommitList");

function renderItem(param) {
  return FlatList$BsReactNative.renderItem((function (param) {
                var item = param[/* item */0];
                return ReasonReact.element(undefined, undefined, RNListItem$Gitphone.make(item.name, item.subtitle, /* record */[
                                /* source : record */[/* uri */item.avatar_url],
                                /* title */item.name
                              ], /* array */[]));
              }), param);
}

function keyExtractor(_item, idx) {
  return String(idx);
}

var getCommits = fetch("https://api.github.com/repos/react-native-training/react-native-elements/commits").then((function (prim) {
          return prim.json();
        })).then((function (json) {
        return Promise.resolve((console.log(json), /* () */0));
      }));

function make(navigation, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              Promise.resolve(CommitData$Gitphone.fetchCommits);
              return ReasonReact.element(undefined, undefined, ScrollView$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[ReasonReact.element(undefined, undefined, FlatList$BsReactNative.make($$Array.of_list(listJst), renderItem, keyExtractor, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[]))]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.S = S;
exports.listJst = listJst;
exports.component = component;
exports.renderItem = renderItem;
exports.keyExtractor = keyExtractor;
exports.getCommits = getCommits;
exports.make = make;
/* styles Not a pure module */
