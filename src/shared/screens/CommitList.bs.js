// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Utils$Gitphone = require("../Utils/Utils.bs.js");
var RNAvatar$Gitphone = require("../components/rnelements/RNAvatar.bs.js");
var Text$BsReactNative = require("bs-react-native/src/components/text.js");
var View$BsReactNative = require("bs-react-native/src/components/view.js");
var CommitData$Gitphone = require("../data/CommitData.bs.js");
var RNListItem$Gitphone = require("../components/rnelements/RNListItem.bs.js");
var Style$BsReactNative = require("bs-react-native/src/style.js");
var FlatList$BsReactNative = require("bs-react-native/src/components/flatList.js");
var Dimensions$BsReactNative = require("bs-react-native/src/dimensions.js");
var ScrollView$BsReactNative = require("bs-react-native/src/components/scrollView.js");
var StyleSheet$BsReactNative = require("bs-react-native/src/styleSheet.js");
var ActivityIndicator$BsReactNative = require("bs-react-native/src/components/activityIndicator.js");

var dimensions = Dimensions$BsReactNative.get(/* screen */-950191252);

var styles = StyleSheet$BsReactNative.create({
      subtitleStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.color(/* String */Block.__(0, ["rgba(0, 0, 0, 0.54)"])),
            /* [] */0
          ]),
      containerStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.alignItems(/* Center */2),
            /* :: */[
              Style$BsReactNative.height(/* Pt */Block.__(0, [50])),
              /* :: */[
                Style$BsReactNative.justifyContent(/* Center */2),
                /* :: */[
                  Style$BsReactNative.paddingHorizontal(/* Pt */Block.__(0, [0])),
                  /* :: */[
                    Style$BsReactNative.paddingTop(/* Pt */Block.__(0, [0])),
                    /* :: */[
                      Style$BsReactNative.width(/* Pt */Block.__(0, [dimensions.width])),
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]
          ]),
      containerStyle2: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.alignItems(/* FlexStart */0),
            /* :: */[
              Style$BsReactNative.borderBottomWidth(1),
              /* :: */[
                Style$BsReactNative.flex(1),
                /* :: */[
                  Style$BsReactNative.width(/* Pct */Block.__(1, [100])),
                  /* [] */0
                ]
              ]
            ]
          ]),
      centerContainerStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.paddingRight(/* Pt */Block.__(0, [20])),
            /* [] */0
          ])
    });

var S = /* module */[
  /* dimensions */dimensions,
  /* styles */styles
];

var styles$1 = StyleSheet$BsReactNative.create({
      leftElementStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.height(/* Pt */Block.__(0, [100])),
            /* :: */[
              Style$BsReactNative.marginRight(/* Pt */Block.__(0, [0])),
              /* [] */0
            ]
          ])
    });

var component = ReasonReact.statelessComponent("LeftElement");

function make(item, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              var title = Utils$Gitphone.getInitials(item.name);
              return ReasonReact.element(undefined, undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Caml_option.some(styles$1.leftElementStyle), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[ReasonReact.element(undefined, undefined, RNAvatar$Gitphone.make(/* record */[/* uri */item.avatar_url], "medium", title, true, /* array */[]))]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var LeftElement = /* module */[
  /* styles */styles$1,
  /* component */component,
  /* make */make
];

var component$1 = ReasonReact.reducerComponent("CommitList");

function renderItem(param) {
  return FlatList$BsReactNative.renderItem((function (param) {
                var item = param[/* item */0];
                return ReasonReact.element(undefined, undefined, RNListItem$Gitphone.make(item.name, item.message, ReasonReact.element(undefined, undefined, make(item, /* array */[])), styles.containerStyle2, styles.subtitleStyle, /* array */[]));
              }), param);
}

function make$1(navigation, owner, repo, _children) {
  return /* record */[
          /* debugName */component$1[/* debugName */0],
          /* reactClassInternal */component$1[/* reactClassInternal */1],
          /* handedOffState */component$1[/* handedOffState */2],
          /* willReceiveProps */component$1[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return Curry._1(self[/* send */3], /* LoadCommits */0);
            }),
          /* didUpdate */component$1[/* didUpdate */5],
          /* willUnmount */component$1[/* willUnmount */6],
          /* willUpdate */component$1[/* willUpdate */7],
          /* shouldUpdate */component$1[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1];
              if (typeof match === "number") {
                switch (match) {
                  case 0 : 
                      return null;
                  case 1 : 
                      return ReasonReact.element(undefined, undefined, ActivityIndicator$BsReactNative.make(undefined, /* String */["#87ceeb"], undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[]));
                  case 2 : 
                      return ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[Utils$Gitphone.s("Something went wrong!")]));
                  
                }
              } else {
                return ReasonReact.element(undefined, undefined, ScrollView$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[ReasonReact.element(undefined, undefined, FlatList$BsReactNative.make($$Array.of_list(match[0]), renderItem, (function (commit, param) {
                                              return commit.sha;
                                            }), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[]))]));
              }
            }),
          /* initialState */(function (param) {
              return /* NotAsked */0;
            }),
          /* retainedProps */component$1[/* retainedProps */11],
          /* reducer */(function (action, _state) {
              if (typeof action === "number") {
                if (action !== 0) {
                  return /* Update */Block.__(0, [/* Failure */2]);
                } else {
                  return /* UpdateWithSideEffects */Block.__(2, [
                            /* Loading */1,
                            (function (self) {
                                CommitData$Gitphone.fetchCommits(owner, repo).then((function (result) {
                                        if (result !== undefined) {
                                          return Promise.resolve(Curry._1(self[/* send */3], /* LoadedCommits */[result]));
                                        } else {
                                          return Promise.resolve(Curry._1(self[/* send */3], /* LoadCommitsFailed */1));
                                        }
                                      }));
                                return /* () */0;
                              })
                          ]);
                }
              } else {
                return /* Update */Block.__(0, [/* Success */[action[0]]]);
              }
            }),
          /* jsElementWrapped */component$1[/* jsElementWrapped */13]
        ];
}

exports.S = S;
exports.LeftElement = LeftElement;
exports.component = component$1;
exports.renderItem = renderItem;
exports.make = make$1;
/* dimensions Not a pure module */
