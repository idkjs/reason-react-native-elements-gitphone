// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Icons$Gitphone = require("../components/Icons.bs.js");
var Input$Gitphone = require("../components/Input.bs.js");
var Utils$Gitphone = require("../Utils/Utils.bs.js");
var Styles$Gitphone = require("../styles/Styles.bs.js");
var RNButton$Gitphone = require("../components/rnelements/RNButton.bs.js");
var View$BsReactNative = require("bs-react-native/src/components/view.js");

var component = ReasonReact.reducerComponent("Home");

var renderPlaneIcon = ReasonReact.element(undefined, undefined, Icons$Gitphone.make("paper-plane", 15, "white")(/* array */[]));

function changeRepoValue(send) {
  var update = Utils$Gitphone.Debounce[/* make */0](250, undefined, (function (newValue) {
          return Curry._1(send, /* UpdateRepo */Block.__(1, [newValue]));
        }));
  return (function (newValue) {
      return Utils$Gitphone.Debounce[/* call */1](newValue, update);
    });
}

function changeOwnerValue(send) {
  var update = Utils$Gitphone.Debounce[/* make */0](250, undefined, (function (newValue) {
          return Curry._1(send, /* UpdateOwner */Block.__(0, [newValue]));
        }));
  return (function (newValue) {
      return Utils$Gitphone.Debounce[/* call */1](newValue, update);
    });
}

function make(navigation, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var state = param[/* state */1];
              return ReasonReact.element(undefined, undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Caml_option.some(Styles$Gitphone.styles.container), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[
                              ReasonReact.element(undefined, undefined, Input$Gitphone.make(Styles$Gitphone.InputS[/* containerStyle */0], Styles$Gitphone.InputS[/* inputStyle */1], undefined, "Owner", "Github's owner", changeOwnerValue(send), /* array */[])),
                              ReasonReact.element(undefined, undefined, Input$Gitphone.make(Styles$Gitphone.InputS[/* containerStyle */0], Styles$Gitphone.InputS[/* inputStyle */1], undefined, "Repo", "Github's repository name", changeRepoValue(send), /* array */[])),
                              ReasonReact.element(undefined, undefined, RNButton$Gitphone.make(Caml_option.some(Styles$Gitphone.ButtonS[/* containerStyle */0]), undefined, undefined, undefined, undefined, undefined, undefined, Caml_option.some(renderPlaneIcon), undefined, undefined, undefined, undefined, undefined, (function (_evt) {
                                          return Curry._1(navigation[/* push */0], /* CommitList */[
                                                      state[/* owner */0],
                                                      state[/* repo */1]
                                                    ]);
                                        }), "SUBMIT", undefined, undefined, /* array */[]))
                            ]));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* owner */"",
                      /* repo */""
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action.tag) {
                return /* Update */Block.__(0, [/* record */[
                            /* owner */state[/* owner */0],
                            /* repo */action[0]
                          ]]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* owner */action[0],
                            /* repo */state[/* repo */1]
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.renderPlaneIcon = renderPlaneIcon;
exports.changeRepoValue = changeRepoValue;
exports.changeOwnerValue = changeOwnerValue;
exports.make = make;
/* component Not a pure module */
