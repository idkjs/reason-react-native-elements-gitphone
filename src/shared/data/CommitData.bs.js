// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var ApiUtils$Gitphone = require("./ApiUtils.bs.js");

function decodeCommit(json) {
  return /* record */[
          /* message */Json_decode.at(/* :: */[
                  "commit",
                  /* :: */[
                    "message",
                    /* [] */0
                  ]
                ], Json_decode.string)(json),
          /* author_name */Json_decode.at(/* :: */[
                  "commit",
                  /* :: */[
                    "author",
                    /* :: */[
                      "name",
                      /* [] */0
                    ]
                  ]
                ], Json_decode.string)(json),
          /* avatar_url */Json_decode.at(/* :: */[
                  "author",
                  /* :: */[
                    "avatar_url",
                    /* [] */0
                  ]
                ], Json_decode.string)(json)
        ];
}

var reposUrl = "https://api.github.com/repos/react-native-training/react-native-elements/commits";

function decodeCommits(json) {
  return Json_decode.list(decodeCommit, json);
}

function fetchRepos(param) {
  return fetch(reposUrl).then(ApiUtils$Gitphone.responseJsonOrError).then((function (json) {
                console.log(json);
                var commits = Json_decode.list(decodeCommit, json);
                Belt_List.forEach(commits, (function (c) {
                        console.log(c);
                        return /* () */0;
                      }));
                console.log(commits);
                return Promise.resolve(commits);
              }));
}

exports.decodeCommit = decodeCommit;
exports.reposUrl = reposUrl;
exports.decodeCommits = decodeCommits;
exports.fetchRepos = fetchRepos;
/* No side effect */
